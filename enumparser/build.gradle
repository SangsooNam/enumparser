plugins {
    id "com.jfrog.bintray" version "1.7"
    id 'com.github.kt3k.coveralls' version '2.8.1'
}

apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: "jacoco"

sourceCompatibility = JavaVersion.VERSION_1_7
targetCompatibility = JavaVersion.VERSION_1_7

dependencies {
    compile 'com.google.guava:guava:11.0.1'

    testCompile 'junit:junit:4.12'
    testCompile 'org.assertj:assertj-core:2.6.0'
}

ext {
    PUBLISH_GROUP_ID = 'io.github.sangsoonam'
    PUBLISH_VERSION = '0.1.3'
}


task javadocJar (type: Jar, dependsOn: javadoc) {
    classifier "sources"
    from javadoc.destinationDir
}

task sourceJar(type: Jar) {
    classifier "javadoc"
    from sourceSets.main.allJava
}

def pomConfig = {
    description('Utility for parsing a string to Enum constant.'){}
    name 'enumparser'
    url 'https://github.com/SangsooNam/enumparser'
    licenses {
        license {
            name 'MIT License'
            url 'http://www.opensource.org/licenses/mit-license.php'
        }
    }
    scm {
        url 'https://github.com/SangsooNam/enumparser'
    }
    developers {
        developer {
            name 'Sangsoo Nam'
        }
    }
}

publishing {
    publications {
        MyPublication(MavenPublication) {
            from components.java
            groupId = PUBLISH_GROUP_ID
            version = PUBLISH_VERSION

            artifact sourceJar
            artifact javadocJar

            pom.withXml {
                asNode().children().last() + pomConfig
            }
        }
    }
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
    publications = ['MyPublication']
    publish = true
    pkg {
        repo = 'enumparser'
        name = 'enumparser'

        version {
            name = 'v' + PUBLISH_VERSION
            released  = new Date()
            mavenCentralSync {
                user = project.hasProperty('ossUser') ? project.property('ossUser') : System.getenv('OSS_USER')
                password = project.hasProperty('ossPassword') ? project.property('ossPassword') : System.getenv('OSS_PASSWORD')
            }
        }

    }
}

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
}
